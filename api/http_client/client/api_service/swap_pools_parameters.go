// Code generated by go-swagger; DO NOT EDIT.

package api_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewSwapPoolsParams creates a new SwapPoolsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSwapPoolsParams() *SwapPoolsParams {
	return &SwapPoolsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSwapPoolsParamsWithTimeout creates a new SwapPoolsParams object
// with the ability to set a timeout on a request.
func NewSwapPoolsParamsWithTimeout(timeout time.Duration) *SwapPoolsParams {
	return &SwapPoolsParams{
		timeout: timeout,
	}
}

// NewSwapPoolsParamsWithContext creates a new SwapPoolsParams object
// with the ability to set a context for a request.
func NewSwapPoolsParamsWithContext(ctx context.Context) *SwapPoolsParams {
	return &SwapPoolsParams{
		Context: ctx,
	}
}

// NewSwapPoolsParamsWithHTTPClient creates a new SwapPoolsParams object
// with the ability to set a custom HTTPClient for a request.
func NewSwapPoolsParamsWithHTTPClient(client *http.Client) *SwapPoolsParams {
	return &SwapPoolsParams{
		HTTPClient: client,
	}
}

/* SwapPoolsParams contains all the parameters to send to the API endpoint
   for the swap pools operation.

   Typically these are written to a http.Request.
*/
type SwapPoolsParams struct {

	// Height.
	//
	// Format: uint64
	Height *uint64

	// Orders.
	Orders *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the swap pools params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SwapPoolsParams) WithDefaults() *SwapPoolsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the swap pools params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SwapPoolsParams) SetDefaults() {
	var (
		ordersDefault = bool(false)
	)

	val := SwapPoolsParams{
		Orders: &ordersDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the swap pools params
func (o *SwapPoolsParams) WithTimeout(timeout time.Duration) *SwapPoolsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the swap pools params
func (o *SwapPoolsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the swap pools params
func (o *SwapPoolsParams) WithContext(ctx context.Context) *SwapPoolsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the swap pools params
func (o *SwapPoolsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the swap pools params
func (o *SwapPoolsParams) WithHTTPClient(client *http.Client) *SwapPoolsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the swap pools params
func (o *SwapPoolsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithHeight adds the height to the swap pools params
func (o *SwapPoolsParams) WithHeight(height *uint64) *SwapPoolsParams {
	o.SetHeight(height)
	return o
}

// SetHeight adds the height to the swap pools params
func (o *SwapPoolsParams) SetHeight(height *uint64) {
	o.Height = height
}

// WithOrders adds the orders to the swap pools params
func (o *SwapPoolsParams) WithOrders(orders *bool) *SwapPoolsParams {
	o.SetOrders(orders)
	return o
}

// SetOrders adds the orders to the swap pools params
func (o *SwapPoolsParams) SetOrders(orders *bool) {
	o.Orders = orders
}

// WriteToRequest writes these params to a swagger request
func (o *SwapPoolsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Height != nil {

		// query param height
		var qrHeight uint64

		if o.Height != nil {
			qrHeight = *o.Height
		}
		qHeight := swag.FormatUint64(qrHeight)
		if qHeight != "" {

			if err := r.SetQueryParam("height", qHeight); err != nil {
				return err
			}
		}
	}

	if o.Orders != nil {

		// query param orders
		var qrOrders bool

		if o.Orders != nil {
			qrOrders = *o.Orders
		}
		qOrders := swag.FormatBool(qrOrders)
		if qOrders != "" {

			if err := r.SetQueryParam("orders", qOrders); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// CandidateStatus candidate status
//
// swagger:model CandidateStatus
type CandidateStatus string

const (

	// CandidateStatusAll captures enum value "all"
	CandidateStatusAll CandidateStatus = "all"

	// CandidateStatusOff captures enum value "off"
	CandidateStatusOff CandidateStatus = "off"

	// CandidateStatusOn captures enum value "on"
	CandidateStatusOn CandidateStatus = "on"
)

// for schema
var candidateStatusEnum []interface{}

func init() {
	var res []CandidateStatus
	if err := json.Unmarshal([]byte(`["all","off","on"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		candidateStatusEnum = append(candidateStatusEnum, v)
	}
}

func (m CandidateStatus) validateCandidateStatusEnum(path, location string, value CandidateStatus) error {
	if err := validate.EnumCase(path, location, value, candidateStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this candidate status
func (m CandidateStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateCandidateStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

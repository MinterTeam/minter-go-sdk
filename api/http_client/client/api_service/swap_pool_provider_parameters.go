// Code generated by go-swagger; DO NOT EDIT.

package api_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewSwapPoolProviderParams creates a new SwapPoolProviderParams object
// with the default values initialized.
func NewSwapPoolProviderParams() *SwapPoolProviderParams {
	var ()
	return &SwapPoolProviderParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSwapPoolProviderParamsWithTimeout creates a new SwapPoolProviderParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSwapPoolProviderParamsWithTimeout(timeout time.Duration) *SwapPoolProviderParams {
	var ()
	return &SwapPoolProviderParams{

		timeout: timeout,
	}
}

// NewSwapPoolProviderParamsWithContext creates a new SwapPoolProviderParams object
// with the default values initialized, and the ability to set a context for a request
func NewSwapPoolProviderParamsWithContext(ctx context.Context) *SwapPoolProviderParams {
	var ()
	return &SwapPoolProviderParams{

		Context: ctx,
	}
}

// NewSwapPoolProviderParamsWithHTTPClient creates a new SwapPoolProviderParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSwapPoolProviderParamsWithHTTPClient(client *http.Client) *SwapPoolProviderParams {
	var ()
	return &SwapPoolProviderParams{
		HTTPClient: client,
	}
}

/*SwapPoolProviderParams contains all the parameters to send to the API endpoint
for the swap pool provider operation typically these are written to a http.Request
*/
type SwapPoolProviderParams struct {

	/*Coin0*/
	Coin0 string
	/*Coin1*/
	Coin1 string
	/*Height*/
	Height *uint64
	/*Provider*/
	Provider string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the swap pool provider params
func (o *SwapPoolProviderParams) WithTimeout(timeout time.Duration) *SwapPoolProviderParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the swap pool provider params
func (o *SwapPoolProviderParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the swap pool provider params
func (o *SwapPoolProviderParams) WithContext(ctx context.Context) *SwapPoolProviderParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the swap pool provider params
func (o *SwapPoolProviderParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the swap pool provider params
func (o *SwapPoolProviderParams) WithHTTPClient(client *http.Client) *SwapPoolProviderParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the swap pool provider params
func (o *SwapPoolProviderParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCoin0 adds the coin0 to the swap pool provider params
func (o *SwapPoolProviderParams) WithCoin0(coin0 string) *SwapPoolProviderParams {
	o.SetCoin0(coin0)
	return o
}

// SetCoin0 adds the coin0 to the swap pool provider params
func (o *SwapPoolProviderParams) SetCoin0(coin0 string) {
	o.Coin0 = coin0
}

// WithCoin1 adds the coin1 to the swap pool provider params
func (o *SwapPoolProviderParams) WithCoin1(coin1 string) *SwapPoolProviderParams {
	o.SetCoin1(coin1)
	return o
}

// SetCoin1 adds the coin1 to the swap pool provider params
func (o *SwapPoolProviderParams) SetCoin1(coin1 string) {
	o.Coin1 = coin1
}

// WithHeight adds the height to the swap pool provider params
func (o *SwapPoolProviderParams) WithHeight(height *uint64) *SwapPoolProviderParams {
	o.SetHeight(height)
	return o
}

// SetHeight adds the height to the swap pool provider params
func (o *SwapPoolProviderParams) SetHeight(height *uint64) {
	o.Height = height
}

// WithProvider adds the provider to the swap pool provider params
func (o *SwapPoolProviderParams) WithProvider(provider string) *SwapPoolProviderParams {
	o.SetProvider(provider)
	return o
}

// SetProvider adds the provider to the swap pool provider params
func (o *SwapPoolProviderParams) SetProvider(provider string) {
	o.Provider = provider
}

// WriteToRequest writes these params to a swagger request
func (o *SwapPoolProviderParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param coin0
	if err := r.SetPathParam("coin0", o.Coin0); err != nil {
		return err
	}

	// path param coin1
	if err := r.SetPathParam("coin1", o.Coin1); err != nil {
		return err
	}

	if o.Height != nil {

		// query param height
		var qrHeight uint64
		if o.Height != nil {
			qrHeight = *o.Height
		}
		qHeight := swag.FormatUint64(qrHeight)
		if qHeight != "" {
			if err := r.SetQueryParam("height", qHeight); err != nil {
				return err
			}
		}

	}

	// path param provider
	if err := r.SetPathParam("provider", o.Provider); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

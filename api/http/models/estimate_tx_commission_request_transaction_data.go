// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// EstimateTxCommissionRequestTransactionData estimate tx commission request transaction data
//
// swagger:model EstimateTxCommissionRequestTransactionData
type EstimateTxCommissionRequestTransactionData struct {

	// gas coin id
	GasCoinID int64 `json:"gas_coin_id,omitempty"`

	// mtxs
	Mtxs string `json:"mtxs,omitempty"`

	// payload
	// Format: byte
	Payload strfmt.Base64 `json:"payload,omitempty"`

	// type
	Type EstimateTxCommissionRequestTransactionDataType `json:"type,omitempty"`
}

// Validate validates this estimate tx commission request transaction data
func (m *EstimateTxCommissionRequestTransactionData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *EstimateTxCommissionRequestTransactionData) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	if err := m.Type.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("type")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *EstimateTxCommissionRequestTransactionData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EstimateTxCommissionRequestTransactionData) UnmarshalBinary(b []byte) error {
	var res EstimateTxCommissionRequestTransactionData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

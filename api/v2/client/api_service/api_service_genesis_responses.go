// Code generated by go-swagger; DO NOT EDIT.

package api_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/MinterTeam/minter-go-sdk/v2/api/v2/models"
)

// APIServiceGenesisReader is a Reader for the APIServiceGenesis structure.
type APIServiceGenesisReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *APIServiceGenesisReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAPIServiceGenesisOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAPIServiceGenesisBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAPIServiceGenesisDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAPIServiceGenesisOK creates a APIServiceGenesisOK with default headers values
func NewAPIServiceGenesisOK() *APIServiceGenesisOK {
	return &APIServiceGenesisOK{}
}

/*APIServiceGenesisOK handles this case with default header values.

A successful response.
*/
type APIServiceGenesisOK struct {
	Payload *models.APIPbGenesisResponse
}

func (o *APIServiceGenesisOK) Error() string {
	return fmt.Sprintf("[GET /genesis][%d] apiServiceGenesisOK  %+v", 200, o.Payload)
}

func (o *APIServiceGenesisOK) GetPayload() *models.APIPbGenesisResponse {
	return o.Payload
}

func (o *APIServiceGenesisOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIPbGenesisResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPIServiceGenesisBadRequest creates a APIServiceGenesisBadRequest with default headers values
func NewAPIServiceGenesisBadRequest() *APIServiceGenesisBadRequest {
	return &APIServiceGenesisBadRequest{}
}

/*APIServiceGenesisBadRequest handles this case with default header values.

An unexpected error response
*/
type APIServiceGenesisBadRequest struct {
	Payload *models.APIPbErrorBody
}

func (o *APIServiceGenesisBadRequest) Error() string {
	return fmt.Sprintf("[GET /genesis][%d] apiServiceGenesisBadRequest  %+v", 400, o.Payload)
}

func (o *APIServiceGenesisBadRequest) GetPayload() *models.APIPbErrorBody {
	return o.Payload
}

func (o *APIServiceGenesisBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIPbErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPIServiceGenesisDefault creates a APIServiceGenesisDefault with default headers values
func NewAPIServiceGenesisDefault(code int) *APIServiceGenesisDefault {
	return &APIServiceGenesisDefault{
		_statusCode: code,
	}
}

/*APIServiceGenesisDefault handles this case with default header values.

An unexpected error response
*/
type APIServiceGenesisDefault struct {
	_statusCode int

	Payload *models.GatewayruntimeError
}

// Code gets the status code for the Api service genesis default response
func (o *APIServiceGenesisDefault) Code() int {
	return o._statusCode
}

func (o *APIServiceGenesisDefault) Error() string {
	return fmt.Sprintf("[GET /genesis][%d] ApiService_Genesis default  %+v", o._statusCode, o.Payload)
}

func (o *APIServiceGenesisDefault) GetPayload() *models.GatewayruntimeError {
	return o.Payload
}

func (o *APIServiceGenesisDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayruntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

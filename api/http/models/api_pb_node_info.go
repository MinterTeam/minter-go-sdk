// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// APIPbNodeInfo api pb node info
//
// swagger:model api_pbNodeInfo
type APIPbNodeInfo struct {

	// channels
	Channels string `json:"channels,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// listen addr
	ListenAddr string `json:"listen_addr,omitempty"`

	// moniker
	Moniker string `json:"moniker,omitempty"`

	// network
	Network string `json:"network,omitempty"`

	// other
	Other *NodeInfoOther `json:"other,omitempty"`

	// protocol version
	ProtocolVersion *NodeInfoProtocolVersion `json:"protocol_version,omitempty"`

	// version
	Version string `json:"version,omitempty"`
}

// Validate validates this api pb node info
func (m *APIPbNodeInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOther(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProtocolVersion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APIPbNodeInfo) validateOther(formats strfmt.Registry) error {

	if swag.IsZero(m.Other) { // not required
		return nil
	}

	if m.Other != nil {
		if err := m.Other.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("other")
			}
			return err
		}
	}

	return nil
}

func (m *APIPbNodeInfo) validateProtocolVersion(formats strfmt.Registry) error {

	if swag.IsZero(m.ProtocolVersion) { // not required
		return nil
	}

	if m.ProtocolVersion != nil {
		if err := m.ProtocolVersion.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("protocol_version")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *APIPbNodeInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APIPbNodeInfo) UnmarshalBinary(b []byte) error {
	var res APIPbNodeInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package api_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewCandidatesParams creates a new CandidatesParams object
// with the default values initialized.
func NewCandidatesParams() *CandidatesParams {
	var (
		statusDefault = string("_")
	)
	return &CandidatesParams{
		Status: &statusDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewCandidatesParamsWithTimeout creates a new CandidatesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCandidatesParamsWithTimeout(timeout time.Duration) *CandidatesParams {
	var (
		statusDefault = string("_")
	)
	return &CandidatesParams{
		Status: &statusDefault,

		timeout: timeout,
	}
}

// NewCandidatesParamsWithContext creates a new CandidatesParams object
// with the default values initialized, and the ability to set a context for a request
func NewCandidatesParamsWithContext(ctx context.Context) *CandidatesParams {
	var (
		statusDefault = string("_")
	)
	return &CandidatesParams{
		Status: &statusDefault,

		Context: ctx,
	}
}

// NewCandidatesParamsWithHTTPClient creates a new CandidatesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCandidatesParamsWithHTTPClient(client *http.Client) *CandidatesParams {
	var (
		statusDefault = string("_")
	)
	return &CandidatesParams{
		Status:     &statusDefault,
		HTTPClient: client,
	}
}

/*CandidatesParams contains all the parameters to send to the API endpoint
for the candidates operation typically these are written to a http.Request
*/
type CandidatesParams struct {

	/*Height*/
	Height *string
	/*IncludeStakes*/
	IncludeStakes *bool
	/*Status*/
	Status *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the candidates params
func (o *CandidatesParams) WithTimeout(timeout time.Duration) *CandidatesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the candidates params
func (o *CandidatesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the candidates params
func (o *CandidatesParams) WithContext(ctx context.Context) *CandidatesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the candidates params
func (o *CandidatesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the candidates params
func (o *CandidatesParams) WithHTTPClient(client *http.Client) *CandidatesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the candidates params
func (o *CandidatesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithHeight adds the height to the candidates params
func (o *CandidatesParams) WithHeight(height *string) *CandidatesParams {
	o.SetHeight(height)
	return o
}

// SetHeight adds the height to the candidates params
func (o *CandidatesParams) SetHeight(height *string) {
	o.Height = height
}

// WithIncludeStakes adds the includeStakes to the candidates params
func (o *CandidatesParams) WithIncludeStakes(includeStakes *bool) *CandidatesParams {
	o.SetIncludeStakes(includeStakes)
	return o
}

// SetIncludeStakes adds the includeStakes to the candidates params
func (o *CandidatesParams) SetIncludeStakes(includeStakes *bool) {
	o.IncludeStakes = includeStakes
}

// WithStatus adds the status to the candidates params
func (o *CandidatesParams) WithStatus(status *string) *CandidatesParams {
	o.SetStatus(status)
	return o
}

// SetStatus adds the status to the candidates params
func (o *CandidatesParams) SetStatus(status *string) {
	o.Status = status
}

// WriteToRequest writes these params to a swagger request
func (o *CandidatesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Height != nil {

		// query param height
		var qrHeight string
		if o.Height != nil {
			qrHeight = *o.Height
		}
		qHeight := qrHeight
		if qHeight != "" {
			if err := r.SetQueryParam("height", qHeight); err != nil {
				return err
			}
		}

	}

	if o.IncludeStakes != nil {

		// query param include_stakes
		var qrIncludeStakes bool
		if o.IncludeStakes != nil {
			qrIncludeStakes = *o.IncludeStakes
		}
		qIncludeStakes := swag.FormatBool(qrIncludeStakes)
		if qIncludeStakes != "" {
			if err := r.SetQueryParam("include_stakes", qIncludeStakes); err != nil {
				return err
			}
		}

	}

	if o.Status != nil {

		// query param status
		var qrStatus string
		if o.Status != nil {
			qrStatus = *o.Status
		}
		qStatus := qrStatus
		if qStatus != "" {
			if err := r.SetQueryParam("status", qStatus); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// APIPbCandidateResponse api pb candidate response
//
// swagger:model api_pbCandidateResponse
type APIPbCandidateResponse struct {

	// commission
	Commission string `json:"commission,omitempty"`

	// control address
	ControlAddress string `json:"control_address,omitempty"`

	// min stake
	MinStake string `json:"min_stake,omitempty"`

	// owner address
	OwnerAddress string `json:"owner_address,omitempty"`

	// public key
	PublicKey string `json:"public_key,omitempty"`

	// reward address
	RewardAddress string `json:"reward_address,omitempty"`

	// stakes
	Stakes []*CandidateResponseStake `json:"stakes"`

	// status
	Status string `json:"status,omitempty"`

	// total stake
	TotalStake string `json:"total_stake,omitempty"`

	// uniq users
	UniqUsers string `json:"uniq_users,omitempty"`

	// used slots
	UsedSlots string `json:"used_slots,omitempty"`
}

// Validate validates this api pb candidate response
func (m *APIPbCandidateResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStakes(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APIPbCandidateResponse) validateStakes(formats strfmt.Registry) error {

	if swag.IsZero(m.Stakes) { // not required
		return nil
	}

	for i := 0; i < len(m.Stakes); i++ {
		if swag.IsZero(m.Stakes[i]) { // not required
			continue
		}

		if m.Stakes[i] != nil {
			if err := m.Stakes[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("stakes" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *APIPbCandidateResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APIPbCandidateResponse) UnmarshalBinary(b []byte) error {
	var res APIPbCandidateResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

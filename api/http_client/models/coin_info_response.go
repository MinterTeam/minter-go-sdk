// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CoinInfoResponse coin info response
// Example: {"crr":"0","id":"0","max_supply":"10000000000000000000000000000","name":"","owner_address":null,"reserve_balance":"0","symbol":"BIP","volume":"0"}
//
// swagger:model CoinInfoResponse
type CoinInfoResponse struct {

	// burnable
	Burnable bool `json:"burnable,omitempty"`

	// crr
	Crr uint64 `json:"crr,omitempty,string"`

	// id
	ID uint64 `json:"id,omitempty,string"`

	// max supply
	MaxSupply string `json:"max_supply,omitempty"`

	// mintable
	Mintable bool `json:"mintable,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// owner address
	OwnerAddress string `json:"owner_address,omitempty"`

	// reserve balance
	ReserveBalance string `json:"reserve_balance,omitempty"`

	// symbol
	Symbol string `json:"symbol,omitempty"`

	// volume
	Volume string `json:"volume,omitempty"`
}

// Validate validates this coin info response
func (m *CoinInfoResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this coin info response based on context it is used
func (m *CoinInfoResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CoinInfoResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CoinInfoResponse) UnmarshalBinary(b []byte) error {
	var res CoinInfoResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

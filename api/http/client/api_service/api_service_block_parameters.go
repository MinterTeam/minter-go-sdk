// Code generated by go-swagger; DO NOT EDIT.

package api_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewAPIServiceBlockParams creates a new APIServiceBlockParams object
// with the default values initialized.
func NewAPIServiceBlockParams() *APIServiceBlockParams {
	var ()
	return &APIServiceBlockParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAPIServiceBlockParamsWithTimeout creates a new APIServiceBlockParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAPIServiceBlockParamsWithTimeout(timeout time.Duration) *APIServiceBlockParams {
	var ()
	return &APIServiceBlockParams{

		timeout: timeout,
	}
}

// NewAPIServiceBlockParamsWithContext creates a new APIServiceBlockParams object
// with the default values initialized, and the ability to set a context for a request
func NewAPIServiceBlockParamsWithContext(ctx context.Context) *APIServiceBlockParams {
	var ()
	return &APIServiceBlockParams{

		Context: ctx,
	}
}

// NewAPIServiceBlockParamsWithHTTPClient creates a new APIServiceBlockParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAPIServiceBlockParamsWithHTTPClient(client *http.Client) *APIServiceBlockParams {
	var ()
	return &APIServiceBlockParams{
		HTTPClient: client,
	}
}

/*APIServiceBlockParams contains all the parameters to send to the API endpoint
for the Api service block operation typically these are written to a http.Request
*/
type APIServiceBlockParams struct {

	/*Fields*/
	Fields []string
	/*Height*/
	Height string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the Api service block params
func (o *APIServiceBlockParams) WithTimeout(timeout time.Duration) *APIServiceBlockParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the Api service block params
func (o *APIServiceBlockParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the Api service block params
func (o *APIServiceBlockParams) WithContext(ctx context.Context) *APIServiceBlockParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the Api service block params
func (o *APIServiceBlockParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the Api service block params
func (o *APIServiceBlockParams) WithHTTPClient(client *http.Client) *APIServiceBlockParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the Api service block params
func (o *APIServiceBlockParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFields adds the fields to the Api service block params
func (o *APIServiceBlockParams) WithFields(fields []string) *APIServiceBlockParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the Api service block params
func (o *APIServiceBlockParams) SetFields(fields []string) {
	o.Fields = fields
}

// WithHeight adds the height to the Api service block params
func (o *APIServiceBlockParams) WithHeight(height string) *APIServiceBlockParams {
	o.SetHeight(height)
	return o
}

// SetHeight adds the height to the Api service block params
func (o *APIServiceBlockParams) SetHeight(height string) {
	o.Height = height
}

// WriteToRequest writes these params to a swagger request
func (o *APIServiceBlockParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	valuesFields := o.Fields

	joinedFields := swag.JoinByFormat(valuesFields, "multi")
	// query array param fields
	if err := r.SetQueryParam("fields", joinedFields...); err != nil {
		return err
	}

	// path param height
	if err := r.SetPathParam("height", o.Height); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

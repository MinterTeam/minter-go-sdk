// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// APIPbAddressResponse api pb address response
//
// swagger:model api_pbAddressResponse
type APIPbAddressResponse struct {

	// balance
	Balance []*APIPbAddressBalance `json:"balance"`

	// bip value
	BipValue string `json:"bip_value,omitempty"`

	// delegated
	Delegated []*APIPbAddressDelegatedBalance `json:"delegated"`

	// total
	Total []*APIPbAddressBalance `json:"total"`

	// transaction count
	TransactionCount string `json:"transaction_count,omitempty"`
}

// Validate validates this api pb address response
func (m *APIPbAddressResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBalance(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDelegated(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotal(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APIPbAddressResponse) validateBalance(formats strfmt.Registry) error {

	if swag.IsZero(m.Balance) { // not required
		return nil
	}

	for i := 0; i < len(m.Balance); i++ {
		if swag.IsZero(m.Balance[i]) { // not required
			continue
		}

		if m.Balance[i] != nil {
			if err := m.Balance[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("balance" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *APIPbAddressResponse) validateDelegated(formats strfmt.Registry) error {

	if swag.IsZero(m.Delegated) { // not required
		return nil
	}

	for i := 0; i < len(m.Delegated); i++ {
		if swag.IsZero(m.Delegated[i]) { // not required
			continue
		}

		if m.Delegated[i] != nil {
			if err := m.Delegated[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("delegated" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *APIPbAddressResponse) validateTotal(formats strfmt.Registry) error {

	if swag.IsZero(m.Total) { // not required
		return nil
	}

	for i := 0; i < len(m.Total); i++ {
		if swag.IsZero(m.Total[i]) { // not required
			continue
		}

		if m.Total[i] != nil {
			if err := m.Total[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("total" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *APIPbAddressResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APIPbAddressResponse) UnmarshalBinary(b []byte) error {
	var res APIPbAddressResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
